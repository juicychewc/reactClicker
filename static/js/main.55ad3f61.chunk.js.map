{"version":3,"sources":["components/FriendCard/FriendCard.js","components/Navbar/Navbar.js","App.js","index.js"],"names":["FriendCard","props","react_default","a","createElement","className","onClick","selectOption","id","alt","name","src","image","Navbar","href","class","message","currentScore","highScore","App","state","options","chosenArr","shuffle","i","length","j","Math","floor","random","_ref","_this","setState","indexOf","push","_this2","this","components_Navbar_Navbar","map","components_FriendCard_FriendCard","key","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"iNAWeA,SARI,SAAAC,GAAK,OACtBC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAcC,QAAS,kBAAML,EAAMM,aAAaN,EAAMO,MACnEN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,OAAKK,IAAKR,EAAMS,KAAMC,IAAKV,EAAMW,YCcxBC,SAjBA,SAAAZ,GAAK,OAChBC,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,KAAGU,KAAK,IAAIT,UAAU,cAAtB,sBACAH,EAAAC,EAAAC,cAAA,MAAII,GAAG,aAAaO,MAAM,8BACxBb,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,UAAUS,KAAK,KAAKb,EAAMe,UAC3Cd,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGU,KAAK,KAAR,kBAA4Bb,EAAMgB,eACtCf,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGU,KAAK,KAAR,kBAA4Bb,EAAMiB,wBC2E/BC,6MA5EbC,MAAQ,CACNC,UACAC,UAAW,GACXL,aAAc,EACdC,UAAW,EACXF,QAAS,6BAIXO,QAAU,SAAApB,GACR,IAAK,IAAIqB,EAAIrB,EAAEsB,OAAS,EAAGD,EAAI,EAAGA,IAAK,CACrC,IAAME,EAAIC,KAAKC,MAAMD,KAAKE,UAAYL,EAAI,IADLM,EAEtB,CAAC3B,EAAEuB,GAAIvB,EAAEqB,IAAvBrB,EAAEqB,GAFkCM,EAAA,GAE9B3B,EAAEuB,GAF4BI,EAAA,GAIvC,OAAO3B,KAGTI,aAAe,SAAAC,GAGbuB,EAAKC,SAAS,CAAEX,QAASU,EAAKR,QAAQQ,EAAKX,MAAMC,YAEP,IAAtCU,EAAKX,MAAME,UAAUW,QAAQzB,IAC/BuB,EAAKX,MAAME,UAAUY,KAAK1B,GAC1BuB,EAAKC,SAAS,CACZV,UAAWS,EAAKX,MAAME,UACtBL,aAAcc,EAAKX,MAAMH,aAAe,EACxCD,QAAS,uBAKXe,EAAKC,SAAS,CACZf,aAAc,EACdK,UAAW,GACXN,QAAS,cAGPe,EAAKX,MAAMH,aAAec,EAAKX,MAAMF,WACvCa,EAAKC,SAAS,CACZd,UAAWa,EAAKX,MAAMH,aACtBD,QAAS,8FAOR,IAAAmB,EAAAC,KACP,OACElC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAACiC,EAAD,CACEpB,aAAcmB,KAAKhB,MAAMH,aACzBC,UAAWkB,KAAKhB,MAAMF,UACtBF,QAASoB,KAAKhB,MAAMJ,UAItBd,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACZ+B,KAAKhB,MAAMC,QAAQiB,IAAI,SAAAjB,GAAO,OAC7BnB,EAAAC,EAAAC,cAACmC,EAAD,CACEhC,aAAc4B,EAAK5B,aACnBC,GAAIa,EAAQb,GACZgC,IAAKnB,EAAQb,GACbE,KAAMW,EAAQX,KACdE,MAAOS,EAAQT,oBApEb6B,aCHlBC,IAASC,OAAOzC,EAAAC,EAAAC,cAACwC,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.55ad3f61.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./FriendCard.css\";\n\nconst FriendCard = props => (\n  <div className=\"card col s3\" onClick={() => props.selectOption(props.id)}>\n    <div className=\"img-container\">\n      <img alt={props.name} src={props.image} />\n    </div>\n  </div>\n);\n\nexport default FriendCard;","import React from \"react\";\nimport \"./Navbar.css\";\n\nconst Navbar = props => (\n    <nav>\n    <div className=\"nav-wrapper\">\n      <a href=\"/\" className=\"brand-logo\">Stroop Effect Game</a>\n      <ul id=\"nav-mobile\" class=\"right hide-on-med-and-down\">\n        <li><a className=\"message\" href=\"/\">{props.message}</a></li>\n        <li><a href=\"/\">Current Score: {props.currentScore}</a></li>\n        <li><a href=\"/\">Highest Score: {props.highScore}</a></li>\n      </ul>\n    </div>\n  </nav>\n    // <nav className=\"navbar navbar-expand-lg fixed-top\">\n    //     <h3 className=\"navbarName navbar-left\">Stroop Effect Game</h3>\n    //     <h3 className=\"navbarScore navbar-right\">Current Score: {props.currentScore}   |   Highest Score: {props.highScore}</h3>\n    // </nav>\n);\n\nexport default Navbar;","import React, { Component } from \"react\";\nimport FriendCard from \"./components/FriendCard\";\n// import Jumbotron from \"./components/Jumbotron\";\nimport Navbar from \"./components/Navbar\";\nimport options from \"./options.json\";\n// import \"./App.css\";\n\nclass App extends Component {\n  // Setting this.state.options to the options json array\n  state = {\n    options,\n    chosenArr: [],\n    currentScore: 0,\n    highScore: 0,\n    message: \"Click an Image to Start\",\n  };\n\n  // function to shuffle array\n  shuffle = a => {\n    for (let i = a.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [a[i], a[j]] = [a[j], a[i]];\n    }\n    return a;\n  };\n\n  selectOption = id => {\n\n    // randomize options at start\n    this.setState({ options: this.shuffle(this.state.options) });\n\n    if (this.state.chosenArr.indexOf(id) === -1) {\n      this.state.chosenArr.push(id);\n      this.setState({\n        chosenArr: this.state.chosenArr,\n        currentScore: this.state.currentScore + 1,\n        message: \"Nice! Pick Again\"\n      });\n    }\n\n    else {\n      this.setState({\n        currentScore: 0,\n        chosenArr: [],\n        message: \"Game Over\"\n      });\n\n      if (this.state.currentScore > this.state.highScore) {\n        this.setState({\n          highScore: this.state.currentScore,\n          message: \"New High Score!\"\n        });\n      }\n    }\n  };\n\n  // Map over this.state.options and render a FriendCard component for each friend object\n  render() {\n    return (\n      <div className=\"container-fluid\">\n        <Navbar\n          currentScore={this.state.currentScore}\n          highScore={this.state.highScore}\n          message={this.state.message}\n        />\n\n        {/* <Jumbotron /> */}\n        <div className=\"container\">\n          <div className=\"row\">\n            {this.state.options.map(options => (\n              <FriendCard\n                selectOption={this.selectOption}\n                id={options.id}\n                key={options.id}\n                name={options.name}\n                image={options.image}\n              />\n            ))}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}